- hosts: kube_control_plane
  become: true
  vars_files:
    - env.yaml

  tasks:
    - name: keepalived 및 HAProxy 패키지 설치
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - keepalived
        - haproxy

    - name: k9s 다운로드 및 설치
      shell: |
        wget {{ APT }}/repository/filerepo/k9s/k9s_linux_amd64.deb
        dpkg -i k9s_linux_amd64.deb
      register: result

    - debug:
        var: result

    - name: controllplan01 priority 및 state 값 설정
      set_fact:
        priority: 100
        state: "MASTER"
      when: inventory_hostname == "{{ CONTROLPLAN01 }}"

    - debug: # controllplan01 state 값 확인
        msg: "controllplan01 - state: {{ state }}, priority: {{ priority }}"
      when: inventory_hostname == "{{ CONTROLPLAN01 }}"

    - name: controllplan02 priority 및 state 값 설정
      set_fact:
        priority: 99
        state: "BACKUP"
      when: inventory_hostname == "{{ CONTROLPLAN02 }}"

    - debug: # controllplan02 state 값 확인
        msg: "controllplan02 - state: {{ state }}, priority: {{ priority }}"
      when: inventory_hostname == "{{ CONTROLPLAN02 }}"

    - name: controllplan03 priority 및 state 값 설정
      set_fact:
        priority: 98
        state: "BACKUP"
      when: inventory_hostname == "{{ CONTROLPLAN03 }}"

    - debug: # controllplan03 state 값 확인
        msg: "controllplan03 - state: {{ state }}, priority: {{ priority }}"
      when: inventory_hostname == "{{ CONTROLPLAN03 }}"

    - name: keepalived 설정 파일 생성
      blockinfile:
        path: /etc/keepalived/keepalived.conf
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          global_defs {
            notification_email {
            }
            router_id LVS_NODE_1
            vrrp_skip_check_adv_addr
            vrrp_garp_interval 0
            vrrp_gna_interval 0
          }

          vrrp_script chk_haproxy {
            script "killall -0 haproxy"
            interval 2
            weight 2
          }

          vrrp_instance haproxy-vip {
            state {{ hostvars[inventory_hostname].state }}
            priority {{ hostvars[inventory_hostname].priority }}
            interface enp129s0f0
            virtual_router_id 60
            advert_int 1
            nopreempt
            authentication {
              auth_type PASS
              auth_pass 1111
            }

            virtual_ipaddress {
              {{ VIP }}/24
            }

            track_script {
              chk_haproxy
            }
          }

    - name: 인터페이스 정보 수집
      set_fact:
        interface_name: "{{ ansible_default_ipv4.interface }}"
      when: interface_name is not defined

    - name: keepalived 설정 파일 수정 (인터페이스 변경)
      replace:
        path: /etc/keepalived/keepalived.conf
        regexp: 'interface enp129s0f0'
        replace: 'interface {{ interface_name }}'

    - name: HAProxy 설정 파일 생성
      blockinfile:
        path: /etc/haproxy/haproxy.cfg
        create: yes
        block: |
          listen kubernetes-apiserver-https
            bind *:16443
            mode tcp
            option log-health-checks
            timeout client 3h
            timeout server 3h
            server {{ CONTROLPLAN01 }} {{ hostvars[CONTROLPLAN01].ansible_host }}:6443 check check-ssl verify none inter 10000
            server {{ CONTROLPLAN02 }} {{ hostvars[CONTROLPLAN02].ansible_host }}:6443 check check-ssl verify none inter 10000
            server {{ CONTROLPLAN03 }} {{ hostvars[CONTROLPLAN03].ansible_host }}:6443 check check-ssl verify none inter 10000
            balance roundrobin

          listen stats
            bind *:8080
            mode http
            maxconn 10
            stats enable
            stats hide-version
            stats realm Haproxy\ Statistics